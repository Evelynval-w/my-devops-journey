name: Deploy to AWS EC2

# Trigger the workflow on push to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Define the jobs
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Step 2: Set up Node.js (for any future JavaScript dependencies)
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    # Step 3: Validate HTML, CSS, and JavaScript files
    - name: Validate website files
      run: |
        echo "Validating website files..."
        
        # Check if required files exist
        if [ ! -f "index.html" ]; then
          echo "Error: index.html not found!"
          exit 1
        fi
        
        if [ ! -f "style.css" ]; then
          echo "Error: style.css not found!"
          exit 1
        fi
        
        if [ ! -f "script.js" ]; then
          echo "Error: script.js not found!"
          exit 1
        fi
        
        echo "‚úÖ All required files found"
        
        # Basic HTML validation
        echo "Checking HTML syntax..."
        if grep -q "<!DOCTYPE html>" index.html; then
          echo "‚úÖ Valid HTML DOCTYPE found"
        else
          echo "‚ùå HTML DOCTYPE missing"
          exit 1
        fi
        
        # Check for basic HTML structure
        if grep -q "<html>" index.html && grep -q "</html>" index.html; then
          echo "‚úÖ Valid HTML structure"
        else
          echo "‚ùå Invalid HTML structure"
          exit 1
        fi
        
        # List all files being deployed
        echo "Files to be deployed:"
        ls -la *.html *.css *.js
        
    # Step 4: Deploy to EC2 server
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "üöÄ Starting automated deployment..."
          echo "Deployment triggered by: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref }}"
          
          # Navigate to scripts directory
          cd ~/scripts
          
          # Make sure deploy script is executable
          chmod +x deploy-website.sh
          
          # Run the deployment script
          echo "Running deployment script..."
          ./deploy-website.sh
          
          # Verify deployment
          echo "Verifying deployment..."
          if curl -f -s localhost > /dev/null; then
            echo "‚úÖ Deployment successful - Website is responding"
          else
            echo "‚ùå Deployment failed - Website not responding"
            exit 1
          fi
          
          echo "üéâ Automated deployment completed successfully!"
          
    # Step 5: Run health check after deployment
    - name: Post-deployment health check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "Running post-deployment health check..."
          cd ~/scripts
          chmod +x health-check.sh
          ./health-check.sh
          
    # Step 6: Notify deployment status
    - name: Deployment notification
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "üéâ Deployment Status: SUCCESS"
          echo "‚úÖ Website deployed successfully to EC2"
          echo "üåê Live URL: http://${{ secrets.EC2_HOST }}"
        else
          echo "‚ùå Deployment Status: FAILED"
          echo "Please check the logs above for details"
        fi
        
        echo "üìä Deployment Summary:"
        echo "Repository: ${{ github.repository }}"
        echo "Commit SHA: ${{ github.sha }}"
        echo "Triggered by: ${{ github.actor }}"
        echo "Workflow run: ${{ github.run_number }}"
        echo "Timestamp: $(date)"
